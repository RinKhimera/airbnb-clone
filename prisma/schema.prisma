// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @unique
  email        String
  firstName    String
  lastName     String
  profileImage String?
  Home         Home[]
  Favorite     Favorite[]
  Reservation  Reservation[]
}

model Home {
  id               String        @id @default(cuid())
  title            String?
  description      String?
  guests           Int?
  bedrooms         Int?
  bathrooms        Int?
  country          String?
  photo            String?
  price            Int?
  categoryName     String?
  addedCategory    Boolean       @default(false)
  addedDescription Boolean       @default(false)
  addedLocation    Boolean       @default(false)
  createdAt        DateTime      @default(now())
  User             User?         @relation(fields: [userId], references: [id])
  userId           String?
  Favorite         Favorite[]
  Reservation      Reservation[]
}

model Favorite {
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  Home      Home     @relation(fields: [homeId], references: [id], onDelete: Cascade)
  homeId    String
  createdAt DateTime @default(now())

  @@id([userId, homeId])
}

model Reservation {
  id        String   @id @default(uuid())
  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
  Home      Home?    @relation(fields: [homeId], references: [id], onDelete: Cascade)
  homeId    String?
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
}
